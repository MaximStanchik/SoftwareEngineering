//Значения X, Y, Z, S
//X = 9 + n, 
//Y = 10 + n, 
//Z = 11 + n, 
//S = 1.0 + n, 
//n - порядковый номер студента по списку. (мой порядковй номер по списку 24)


//функция суммы для задания 21
int sum(int x, int y) {
	return x + y;
}

#include <iostream>

int main()
{
	bool Number4_1 = true;  // адрес:0x00CFFEC7; значение в памяти: 01.
	bool Number4_2 = false; // адрес:0x00CFFEBB; значение в памяти: 00.
	char Number5 = 't'; // адрес:0x00CFFEAF; значение в памяти:74; кодировка:ASCII. 
	char Number6 = 'т'; // адрес:0x00CFFEA3; значение в памяти: f2; кодировка:Windows-1251. 
	wchar_t Number7 =L's'; // адрес:0x00CFFE94; значение в памяти:73 00; кодировка:UTF-16LE.
	wchar_t Number8 =L'с'; // адрес:0x00CFFE88; значение в памяти: 41 04; кодировка:UTF-16LE. 
	short int Number9_1 = 33;  // адрес:43010000; значение в памяти : 21 00. Высчетал вручную: 00 21.
	short int Number9_2 = -33; // адрес:C3010000; значение в памяти : df ff. Сам посчитал:FF DF.

	//10 отриц неправильно

	short Number10_1 = SHRT_MAX;   //шестнадцатеричное значение самого большого числа типа short. Вот такое значение в памяти: ff 7f. Десятичное значение: 32767.
	short Number10_2 = SHRT_MIN;//шестнадцатеричное значение самого малого числа типа short. Вот такое значение в памяти: 00 80. Десятичное значение: -32767.
	unsigned short Number11_1 = 0xFFFF; //значение в памяти : ff ff. Десятичное значение: 65535.
	unsigned short Number11_2 = 0x0; //значение в памяти : 00 00. Десятичное значение: 0.
	int Number12_1 = 34; //посчитал вручную:45; значение в памяти: 22 00 00 00, моё решение и значение в памяти не сошлись(((( адрес в памяти: 0x006FF7E4
	int Number12_2 = -34; //посчитал вручную:BB;  значение в памяти: de ff ff ff; моё решение и значение в памяти не сошлись(((( адрес в памяти: 0x006FF7D8;
	int Number13_1 = INT_MAX;   //Десятичное значение : 2147483647;
	int Number13_2 = INT_MIN;   //Десятичное значение : -2147483647;
	unsigned int Number14_1 = UINT_MAX;  //Десятичное значение :4294967295;
	unsigned int Number14_2 = 0x0;  //Десятичное значение : 0;
	long Number16_1 = 0x7FFFFFFF; // 2147483647--десятичное значение
	long Number16_2 = 0x80000000; //-2147483648--десятичное значение
	unsigned long Number17_1 = 0xFFFFFFFF; //4294967295--десятичное значение
	unsigned long Number17_2 = 0x0; //0--десятичное значение
	float Number18_1 = 25.0; //адрес памяти: 0x00CFFDBC; значение в памяти: 00 00 c8 41 ;  мое значение: 19
	float Number18_2 = -25.0; //адрес памяти:0x00CFFDB0; значение в памяти:  00 00 c8 c1; мое значение: E7

	//Number19
	float A = 10.1, inf; //infinity--бесконечность. В данном случае положительная
	inf = A / 0;
	float B = -9500.0, minf; //infinity--бесконечность. В данном случае отрицательная
	minf = B / 0;
	float mind; //negative indeterminacy--отрицательная неопределенность
	mind = minf * 0.0;
	std::cout << inf << std::endl;
	std::cout << minf << std::endl;
	std::cout << mind << std::endl;

	//Number20
	char letter1= 'a';   //адрес памяти:0x00CFFD6B; значение в памяти:61;
	char* plet1 = &letter1; 
	plet1 += 3;//адрес памяти:0x00CFFD5C; значение в памяти:87;

	wchar_t letter2 = 'b';    //адрес памяти:0x00F3FD1C; значение в памяти:62 00;
	wchar_t* plet2 = &letter2;  
	plet2 += 3; //адрес памяти:0x00CFFD44; значение в памяти:ca;

	short number1 = 1;         //адрес памяти:0x00CFF9B8; значение в памяти:01 00;
	short* pnum1 = &number1;   
	pnum1 += 3;//адрес памяти:0x00CFFD2C; значение в памяти:3a;

	int number2 = 2; //адрес памяти:0x00CFFD20; значение в памяти: 02 00 00 00;
	int* pnum2 = &number2; 
	pnum2 += 3; //адрес памяти:0x00CFFD14; значение в памяти: 80;

	float number3 = 3; //адрес памяти:0x00CFFD08; значение в памяти:00 00 40 40;
	float* pnumb3 = &number3;  
	pnumb3 += 3; //адрес памяти:0x00CFFCFC; значение в памяти:c0;

	double number4 = 4; //адрес памяти:0x00CFFCEC; значение в памяти:00 00 00 00 00 00 10 40;
	double* pnum4 = &number4; 
	pnum4+=3;//адрес памяти:0x00CFFCE0; значение в памяти:10 f6;


	//Number21
	int(*f)(int, int) = &sum;  //Адрес в памяти: 0x005A18D0; Значение в памяти: de 13 ba 3f f7 7f 00 00.
	f(2, 3);
	return 0;
}


//int(*f)(int, int) = &sum;  //Адрес в памяти: 0x0000008C46AFF5A8; Значение в памяти: de 13 ba 3f f7 7f 00 00.
//00007FF76A596332  lea         rax, [sum(07FF76A5913DEh)]
//00007FF76A596339  mov         qword ptr[f], rax
//f(2, 3);
//00007FF76A596340  mov         edx, 3
//00007FF76A596345  mov         ecx, 2
//00007FF76A59634A  call        qword ptr[f]